name: Django CI/CD Workflow with DAST

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - "5432:5432"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install django psycopg2-binary python-dotenv

      - name: Run migrations
        run: python manage.py migrate

      - name: Run tests
        run: python manage.py test

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install django python-dotenv

      - name: Run Bandit security checks
        run: |
          pip install bandit
          bandit -r .

      - name: Run Django security check
        run: python manage.py check --deploy

  deploy:
    needs: [test, security]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install AWS CLI
        run: |
            pip install awscli
            pip install awsebcli

      - name: Generate Version Label
        id: version_label
        run: echo "VERSION_LABEL=$(date +'%Y%m%d%H%M%S')-${{ github.sha }}" >> $GITHUB_ENV

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'      

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v20
        with:
            aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            application_name: phred
            environment_name: phred-env
            version_label: ${{VERSION_LABEL}}
            region: us-east-1
            deployment_package: deploy.zip

  dast:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Install OWASP ZAP
        run: |
          sudo apt-get update
          sudo apt-get install -y zaproxy

      - name: Run OWASP ZAP DAST scan
        run: |
          zap-baseline.py -t http://phred.us-east-1.elasticbeanstalk.com/  # Replace with your actual environment URL
        env:
          ZAP_REPORT: ${{ github.workspace }}/zap_report.html

      - name: Upload OWASP ZAP report
        uses: actions/upload-artifact@v2
        with:
          name: zap-report
          path: zap_report.html
