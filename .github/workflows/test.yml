name: Django CI/CD Workflow with DAST

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - "5432:5432"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # Install dependencies using requirements.txt
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        run: python manage.py migrate

      - name: Run tests
        run: python manage.py test

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # Install dependencies using requirements.txt
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Bandit security checks
        run: |
          pip install bandit
          bandit -r .

      - name: Run Django security check
        run: python manage.py check --deploy

  deploy:
    needs: [test, security]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # Install AWS CLI
      - name: Install AWS CLI
        run: pip install awscli

      # Deploy to Existing AWS Elastic Beanstalk Environment
      - name: Deploy to Existing AWS Elastic Beanstalk Environment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"
        run: |
          eb init phred --region $AWS_REGION
          eb use phred.env
          eb deploy phred.env --region $AWS_REGION

  dast:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Install OWASP ZAP
        run: |
          sudo apt-get update
          sudo apt-get install -y zaproxy

      - name: Run OWASP ZAP DAST scan
        run: |
          zap-baseline.py -t http://phred.us-east-1.elasticbeanstalk.com/  # Replace with your actual environment U
